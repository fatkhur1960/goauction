definitions:
  app.Result:
    properties:
      code:
        type: integer
      description:
        type: string
      result:
        type: object
    type: object
  models.AccessToken:
    properties:
      created:
        type: string
      token:
        type: string
      user_id:
        type: integer
      valid_thru:
        type: string
    type: object
  models.Chat:
    properties:
      id:
        type: integer
      initiator_id:
        type: integer
      last_updated:
        type: string
      subscriber_id:
        type: integer
      ts:
        type: string
    type: object
  models.Message:
    properties:
      attachment_data:
        type: string
      attachment_kind:
        type: integer
      chat_id:
        type: integer
      deleted:
        type: boolean
      id:
        type: integer
      receiver_id:
        type: integer
      sender_id:
        type: integer
      text:
        type: string
      ts:
        type: string
    type: object
  models.Product:
    properties:
      bid_multpl:
        type: number
      closed:
        type: boolean
      closed_at:
        type: string
      condition:
        type: integer
      condition_avg:
        type: number
      created_at:
        type: string
      desc:
        type: string
      id:
        type: integer
      labels:
        items:
          $ref: '#/definitions/models.ProductLabel'
        type: array
      product_images:
        items:
          $ref: '#/definitions/models.ProductImage'
        type: array
      product_name:
        type: string
      sold:
        type: boolean
      start_price:
        type: number
      store_id:
        type: integer
    type: object
  models.ProductBidder:
    properties:
      bid_price:
        type: number
      created_at:
        type: string
      id:
        type: integer
      product_id:
        type: integer
      user_id:
        type: integer
      winner:
        type: boolean
    type: object
  models.ProductImage:
    properties:
      id:
        type: integer
      image_url:
        type: string
    type: object
  models.ProductLabel:
    properties:
      name:
        type: string
      value:
        type: string
    type: object
  models.RegisterUser:
    properties:
      code:
        type: string
      email:
        type: string
      full_name:
        type: string
      phone_num:
        type: string
      registered_at:
        type: string
      token:
        type: string
    type: object
  models.Store:
    properties:
      address:
        type: string
      announcement:
        type: string
      id:
        type: integer
      info:
        type: string
      last_updated:
        type: string
      name:
        type: string
      owner_id:
        type: integer
      product_count:
        type: integer
      province:
        type: string
      regency:
        type: string
      sub_district:
        type: string
      ts:
        type: string
      village:
        type: string
    type: object
  models.User:
    properties:
      active:
        type: boolean
      address:
        type: string
      avatar:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      last_login:
        type: string
      phone_num:
        type: string
      registered_at:
        type: string
      type:
        type: integer
    type: object
  models.UserNotif:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      notif_type:
        type: integer
      read:
        type: boolean
      target:
        type: integer
      title:
        type: string
      user_id:
        type: integer
    type: object
  service.EntriesResult:
    properties:
      count:
        type: integer
      entries:
        type: object
    type: object
  types.Chat:
    properties:
      display:
        type: object
      id:
        type: integer
      initiator_id:
        type: integer
      last_updated:
        type: string
      subscriber_id:
        type: integer
      ts:
        type: string
    type: object
  types.Product:
    properties:
      bid_multpl:
        type: number
      bid_status:
        type: object
      closed:
        type: boolean
      closed_at:
        type: string
      condition:
        type: integer
      condition_avg:
        type: number
      created_at:
        type: string
      desc:
        type: string
      id:
        type: integer
      labels:
        type: object
      product_images:
        type: object
      product_name:
        type: string
      sold:
        type: boolean
      start_price:
        type: number
    type: object
info:
  contact: {}
  description: Backend lelah online
  license:
    name: GNU
    url: https://github.com/fatkhur1960/goauction/blob/master/LICENSE
  termsOfService: https://github.com/fatkhur1960/goauction
  title: GoAuction API
  version: "1.0"
paths:
  /activate:
    post:
      consumes:
      - application/json
      parameters:
      - description: Token
        in: body
        name: token
        required: true
        schema:
          type: string
      - description: Passhash
        in: body
        name: passhash
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      summary: Endpoint untuk mengaktifkan user
      tags:
      - UserService
  /add:
    post:
      consumes:
      - application/json
      parameters:
      - description: ProductName
        in: body
        name: product_name
        required: true
        schema:
          type: string
      - description: ProductImages
        in: body
        name: product_images
        required: true
        schema:
          items:
            type: string
          type: array
      - description: Desc
        in: body
        name: desc
        required: true
        schema:
          type: string
      - description: Condition
        in: body
        name: condition
        required: true
        schema:
          type: integer
      - description: ConditionAvg
        in: body
        name: condition_avg
        required: true
        schema:
          type: integer
      - description: StartPrice
        in: body
        name: start_price
        required: true
        schema:
          type: integer
      - description: BidMultpl
        in: body
        name: bid_multpl
        required: true
        schema:
          type: integer
      - description: ClosedAt
        in: body
        name: closed_at
        required: true
        schema:
          type: string
      - description: Labels
        in: body
        name: labels
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  $ref: '#/definitions/models.Product'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk menambahkan product
      tags:
      - ProductService
  /authorize:
    post:
      consumes:
      - application/json
      parameters:
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: Passhash
        in: body
        name: passhash
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  $ref: '#/definitions/models.AccessToken'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Result'
      summary: Endpoint untuk melakukan otorisasi
      tags:
      - AuthService
  /become-auctioneer:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: json
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk mengupgrade user jadi pelelang
      tags:
      - UserService
  /bid:
    post:
      consumes:
      - application/json
      parameters:
      - description: ProductID
        in: body
        name: product_id
        required: true
        schema:
          type: integer
      - description: BidPrice
        in: body
        name: bid_price
        required: true
        schema:
          type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  $ref: '#/definitions/models.ProductBidder'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk mengupdate product
      tags:
      - ProductService
  /bids:
    get:
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Query
        in: query
        name: query
        type: string
      - description: Filter
        in: query
        name: filter
        type: string
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  allOf:
                  - $ref: '#/definitions/service.EntriesResult'
                  - properties:
                      entries:
                        items:
                          $ref: '#/definitions/types.Product'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk mendapatkan bid history
      tags:
      - UserService
  /connect-create:
    post:
      parameters:
      - description: AppID
        in: body
        name: app_id
        required: true
        schema:
          type: string
      - description: ProviderName
        in: body
        name: provider_name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Result'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk membuat app id digunakan untuk kebutuhan push notif
      tags:
      - UserService
  /connect-remove:
    post:
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Result'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk menghapus app id dari db
      tags:
      - UserService
  /delete:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  $ref: '#/definitions/models.Product'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk menghapus product
      tags:
      - ProductService
  /detail:
    get:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: query
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  allOf:
                  - $ref: '#/definitions/service.EntriesResult'
                  - properties:
                      entries:
                        items:
                          $ref: '#/definitions/models.Product'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk menampilkan detail product
      tags:
      - ProductService
  /list:
    get:
      consumes:
      - application/json
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Query
        in: query
        name: query
        type: string
      - description: Filter
        in: query
        name: filter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  allOf:
                  - $ref: '#/definitions/service.EntriesResult'
                  - properties:
                      entries:
                        items:
                          $ref: '#/definitions/types.Product'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk menampilkan list product
      tags:
      - ProductService
  /list-messages:
    get:
      consumes:
      - application/json
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Query
        in: query
        name: query
        type: string
      - description: Filter
        in: query
        name: filter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  allOf:
                  - $ref: '#/definitions/service.EntriesResult'
                  - properties:
                      entries:
                        items:
                          $ref: '#/definitions/models.Message'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk menampilkan list chat room
      tags:
      - ProductService
  /mark-as-sold:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  $ref: '#/definitions/models.Product'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint digunakan untuk menandai produk sudah terjual
      tags:
      - ProductService
  /me/info:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  $ref: '#/definitions/models.User'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk informasi user
      tags:
      - UserService
    post:
      consumes:
      - application/json
      parameters:
      - description: FullName
        in: body
        name: full_name
        required: true
        schema:
          type: string
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: PhoneNum
        in: body
        name: phone_num
        required: true
        schema:
          type: string
      - description: Address
        in: body
        name: address
        schema:
          type: string
      - description: Avatar
        in: body
        name: avatar
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  $ref: '#/definitions/models.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk mengupdate informasi user
      tags:
      - UserService
  /me/list:
    get:
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Query
        in: query
        name: query
        type: string
      - description: Filter
        in: query
        name: filter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  allOf:
                  - $ref: '#/definitions/service.EntriesResult'
                  - properties:
                      entries:
                        items:
                          $ref: '#/definitions/types.Product'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk mendapatkan list product untuk current user
      tags:
      - ProductService
  /me/store:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  $ref: '#/definitions/models.Store'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk mendapatkan user store
      tags:
      - UserService
  /new-room:
    post:
      consumes:
      - application/json
      parameters:
      - description: UserID
        in: body
        name: user_id
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  $ref: '#/definitions/models.Chat'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      summary: Endpoint untuk membuat chat room
      tags:
      - ChatService
  /notifs:
    get:
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      - description: Query
        in: query
        name: query
        type: string
      - description: Filter
        in: query
        name: filter
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  allOf:
                  - $ref: '#/definitions/service.EntriesResult'
                  - properties:
                      entries:
                        items:
                          $ref: '#/definitions/models.UserNotif'
                        type: array
                    type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk mendapatkan list notif untuk current user
      tags:
      - UserService
  /notifs/read:
    post:
      parameters:
      - description: NotifIds
        in: body
        name: notif_ids
        required: true
        schema:
          items:
            type: integer
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Result'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: endpoint untuk menandai notif sudah terbaca
      tags:
      - UserService
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: FullName
        in: body
        name: full_name
        required: true
        schema:
          type: string
      - description: Email
        in: body
        name: email
        required: true
        schema:
          type: string
      - description: PhoneNum
        in: body
        name: phone_num
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  $ref: '#/definitions/models.RegisterUser'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      summary: Endpoint untuk register user
      tags:
      - UserService
  /reopen:
    post:
      consumes:
      - application/json
      parameters:
      - description: ProductID
        in: body
        name: id
        required: true
        schema:
          type: integer
      - description: ClosedAT
        in: body
        name: closed_at
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  $ref: '#/definitions/models.Product'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint digunakan untuk membuka bid kembali
      tags:
      - ProductService
  /send-message:
    post:
      consumes:
      - application/json
      parameters:
      - description: ChatID
        in: body
        name: chat_id
        required: true
        schema:
          type: integer
      - description: ReceiverID
        in: body
        name: receiver_id
        required: true
        schema:
          type: integer
      - description: Text
        in: body
        name: text
        required: true
        schema:
          type: string
      - description: AttachmentKind
        in: body
        name: attachment_kind
        required: true
        schema:
          type: integer
      - description: AttachmentData
        in: body
        name: attachment_data
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  $ref: '#/definitions/models.Message'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk menambahkan product
      tags:
      - ChatService
  /unauthorize:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Result'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk menghapus otorisasi
      tags:
      - AuthService
  /update:
    post:
      consumes:
      - application/json
      parameters:
      - description: ID
        in: body
        name: id
        required: true
        schema:
          type: integer
      - description: ProductName
        in: body
        name: product_name
        required: true
        schema:
          type: string
      - description: ProductImages
        in: body
        name: product_images
        required: true
        schema:
          items:
            type: string
          type: array
      - description: Desc
        in: body
        name: desc
        required: true
        schema:
          type: string
      - description: Condition
        in: body
        name: condition
        required: true
        schema:
          type: integer
      - description: ConditionAvg
        in: body
        name: condition_avg
        required: true
        schema:
          type: integer
      - description: StartPrice
        in: body
        name: start_price
        required: true
        schema:
          type: integer
      - description: BidMultpl
        in: body
        name: bid_multpl
        required: true
        schema:
          type: integer
      - description: ClosedAt
        in: body
        name: closed_at
        required: true
        schema:
          type: string
      - description: Labels
        in: body
        name: labels
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Result'
            - properties:
                result:
                  $ref: '#/definitions/models.Product'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Result'
      security:
      - bearerAuth: []
      summary: Endpoint untuk mengupdate product
      tags:
      - ProductService
securityDefinitions:
  bearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
